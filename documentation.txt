/*
* Автор: Касенгалиева Аида
*
* Telegram: @aida_sgndkva
* Email: aidasagan369@gmail.com
*/

Для иконок использовала Bootstrap.

Писала на javascript в строгом режиме.

В функции buildTree:
Обработчик добавляется как для узловых (у которых node === 1),
так и для листовых (у которых node === 0) услуг. Это позволило правильно открывать и закрывать все элементы дерева при клике на них.

Функция buildTree принимает объект данных `data` и
идентификатор родительской услуги `parent`, затем строит древовидное представление услуг на основе этих данных. Вот как она работает:

1. Фильтрует услуги из массива `data.services`, оставляя только те, у которых `head` равен `parent`.
2. Если отфильтрованный массив пустой (то есть услуг нет), функция завершает выполнение.
3. Создает элемент `<ul>` для списка услуг и присваивает ему класс `'list-group'`.
4. Сортирует отфильтрованный массив услуг по значению свойства `sorthead`.
5. Для каждой услуги создается элемент `<li>` списка с классом `'list-group-item'`.
6. Создается иконка для элемента `<li>`, которая меняет свое состояние при клике на элемент.
7. Создается текстовый узел с названием услуги и ее ценой, который добавляется к элементу `<li>`.
8. Если у услуги `node` равно 1 или 0 (то есть если услуга является как узловой, так и листовой), добавляется обработчик
события click, который открывает или закрывает подуровни услуг при клике на элементе.
9. Рекурсивно вызывается функция `buildTree` для построения подуровней текущей услуги, если они есть.
10. Построенный элемент `<li>` добавляется в элемент `<ul>`.
11. Возвращается элемент `<ul>` с построенными элементами `<li>`, представляющими древовидное представление услуг.